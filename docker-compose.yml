version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./src:/src
    networks:
      - backend
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  redis:
    image: redis:6-alpine
    networks:
      - backend

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend

  celery:
    build: .
    command: celery -A tasks.celery worker --loglevel=info
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./src:/src
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data: